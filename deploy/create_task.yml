- name: Create task build directory {{item}}
  file:
    path: ../build/{{env}}/{{item}}
    state: directory
  tags:
  - always

- name: Create ECS task definition file {{item}}
  template: src=templates/ecs_task_definition.json.j2
            dest=../build/{{env}}/{{item}}/ecs_task_definition.json
            lstrip_blocks=yes
  tags:
  - always

- name: Register ECS task definition {{item}}
  command: "aws ecs register-task-definition --cli-input-json file://ecs_task_definition.json"
  args:
    chdir: ../build/{{env}}/{{item}}
  register: register_task_result
  tags:
  - always

- name: Output Task Definition ARN
  debug:
    msg: "Task Definition ARN={{task_definition_arn}}"

- name: Create CloudReactor Task definition {{item}}
  template: src=templates/cloudreactor_task.yml.j2
            dest=../build/{{env}}/{{item}}/cloudreactor_task.yml
            lstrip_blocks=yes
  tags:
  - always

- name: Read yaml
  include_vars:
    file: ../build/{{env}}/{{item}}/cloudreactor_task.yml
    name: cloudreactor_task
  when: resolved_cloudreactor.enabled
  tags:
  - always

- name: Output CloudReactor Task definition JSON
  debug:
    msg: "{{ cloudreactor_task | to_json }}"
    verbosity: 2
  tags:
  - always

- name: Create/update task in CloudReactor
  uri:
    url: "{{ resolved_cloudreactor.api_base_url }}/api/v1/tasks/"
    method: POST
    headers:
      Authorization: "Token {{resolved_cloudreactor.deploy_api_key}}"
    return_content: yes
    body: "{{ cloudreactor_task | to_json }}"
    body_format: json
    status_code:
      - 200
      - 201
  when: resolved_cloudreactor.enabled
  tags:
  - always
