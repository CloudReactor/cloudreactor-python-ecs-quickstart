# Copy this file to {environment}.yml where {environment} is the name of
# your deployment environment (i.e. staging, production).
# Then adjust the values according to your AWS settings.
# If you include secrets in this file, ensure that this file encrypted with
# ansible-vault or git-crypt, or that this file is included in .gitignore.
# Otherwise you may commit secrets to your respository.

# You can override your Run Environment's AWS settings here, but it shouldn't
# be necessary unless:
# a) You haven't specified security groups or subnets in
# your Run Environment; or,
# b) Want to use custom settings for this project (possibly for security and/or
# isolation reasons); or,
# c) You are not using CloudReactor to monitor and manage your tasks.

# project_aws:
#   account_id: 123456789012
#   region: "us-west-2"
#   ecs:
#     cluster_name: staging
#     # Required when deploying a scheduled task without CloudReactor
#     # execution_role_arn: arn:aws:iam::123456789012:role/ecsTaskExecutionRole
#     task:
#       network:
#         security_groups:
#           - sg-1
#           - sg-2
#         subnets:
#           - subnet-private-1
#           - subnet-private-2
#          # Set this to true if your subnets don't have access to a NAT gateway,
#          # for example public subnets.
#          # If you are running on private subnets, this must be false.
#          assign_public_ip: false
#       role_arn: arn:aws:iam::123456789012:role/myrole

cloudreactor:
  # Required: the API key used to deploy the Tasks.
  # The key must have Developer access level or above and be scoped to the
  # Run Environment you are deploying to, or be unscoped.
  deploy_api_key: xxx

  # # You can also specify the API key used by your Task.
  # # The key must of Task access level or above  and be scoped to the
  # # Run Environment you are deploying to, or be unscoped.
  # task_api_key: yyy

  # # Alternatively, the proc_wrapper module can fetch the API key from
  # # AWS Secrets Manager at runtime (using the Task Role to gain access):
  # task_api_key: arn:aws:secretsmanager:[aws_region]:[aws_account_id]:secret:app/example/cloudreactor_api_key-xxx"

  # # The name of the Run Environment in CloudReactor. The Run Environment stores
  # # AWS settings that apply to all tasks in the deployment environment.
  # # It defaults to the name of the deployment environment you pass in via
  # # command-line or the DEPLOYMENT_ENVIRONMENT variable if you use Docker to
  # # deploy.
  # run_environment: Your Staging

# Add Task settings that apply to all Tasks running in this deployment.
# They will override the settings in common.yml.
default_env_task_config:
  env:
    SOME_SECRET_KEY_FOR_ALL_TASKS: "FOO"
    # #  These will be resolved to DATABASE_USERNAME and DATABASE_PASSWORD by
    # #  proc_wrapper, assuming you set a Task Role that has access to read the
    # #  secret.
    #  DATABASE_USERNAME_FOR_PROC_WRAPPER_TO_RESOLVE: arn:aws:secretsmanager:us-west-2:123456789012:secret:app/example/db|JP:$.username
    #  DATABASE_PASWORD_FOR_PROC_WRAPPER_TO_RESOLVE: arn:aws:secretsmanager:us-west-2:123456789012:secret:app/example/db|JP:$.password

# For any tasks that require overrides vs. common.yml, enter those overrides here.
# For example, the schedule for task_1 in this deployment differs from the
# schedule in common.yml.
task_name_to_env_config:
  task_1:
    env:
      SOME_SECRET_KEY_FOR_TASK_1: "XYZ"
