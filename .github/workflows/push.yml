name: Check and Deploy
on:
  push:
    branches: [ "**" ]
    paths-ignore:
      - '*.md'
      - 'docs/**'
  workflow_dispatch:
    inputs:
      deploy:
        description: "Set to 'true' to deploy to AWS ECS and CloudReactor"
        required: false
        default: "true"
      deployment_environment:
        description: "Environment to deploy to"
        required: false
        default: "staging"

jobs:
  check_and_deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt -r dev-requirements.txt
        pip install pylint-exit

    - name: Test with pytest
      run: "pytest"
      env:
        PYTHONPATH: src
    - name: Syntax check with pylint
      run: "pylint --rcfile=src/.pylintrc src || pylint-exit --error-fail $?"
      env:
        PYTHONPATH: src
    - name: Type check with mypy
      run: "mypy src"
      env:
        PYTHONPATH: src
    - name: Deploy to AWS ECS and CloudReactor
      uses: CloudReactor/aws-ecs-cloudreactor-deployer@v2.0.1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: "us-east-1"
        # Omit or change to https://api.cloudreactor.io for you own projects
        cloudreactor-api-base-url: ${{ secrets.CLOUDREACTOR_API_BASE_URL }}
        cloudreactor-deploy-api-key:  ${{ secrets.CLOUDREACTOR_DEPLOY_API_KEY }}
        # Fill this in if you encrypt deploy_config/vars/xxx.yml because it
        # contains secret values.
        # ansible-vault-password: ""
        # Change to the name of the deployment environment to deploy to after
        # pushing. This normally is a staging environment that has the same
        # name as the Run Environment in CloudReactor.
        deployment-environment: ${{ github.event.inputs.deployment_environment || 'staging' }}
        log-level: DEBUG
      if: (github.ref == 'refs/heads/master') || (github.event.inputs.deploy == 'true')
    - name: Print final message
      run: "echo Complete!"
